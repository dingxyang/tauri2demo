name: Build Test APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-test-apk:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - name: setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.14.4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: setup Java (for Android build only)
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: setup Android SDK (for Android build only)
        uses: android-actions/setup-android@v3

      - name: install NDK (for Android build only)
        run: sdkmanager "ndk;27.0.11902837"

      - name: install dependencies
        run: pnpm install

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android

      - uses: Swatinem/rust-cache@v2
        with:
          key: ubuntu-latest-android-cargo

      - name: get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./frontend/package.json').version")" >> $GITHUB_ENV

      - name: build Android debug APKs
        env:
          NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837
        run: |
          cd backend
          # 清理之前的构建
          rm -rf src-tauri/gen/android
          
          # 初始化 Android 项目
          pnpm tauri android init
          
          # 生成图标
          pnpm tauri icon src-tauri/icons/icon.png
          
          # 恢复 git 状态
          git checkout .

          # 添加权限到 AndroidManifest.xml
          MANIFEST="src-tauri/gen/android/app/src/main/AndroidManifest.xml"
          PERMISSION_LINE='<uses-permission android:name="android.permission.REQUEST_INSTALL_PACKAGES"/>'
          grep -q 'REQUEST_INSTALL_PACKAGES' "$MANIFEST" || \
            sed -i "/android.permission.INTERNET/a \    $PERMISSION_LINE" "$MANIFEST"

          # 构建测试APK (debug模式，不需要签名)
          version=$PACKAGE_VERSION
          
          # 构建 universal debug APK
          pnpm tauri android build --debug
          universal_apk=tauri2demo_${version}_debug_universal.apk
          cp src-tauri/gen/android/app/build/outputs/apk/universal/debug/app-universal-debug.apk $universal_apk
          
          # 构建 arm64 debug APK
          pnpm tauri android build --debug -t aarch64
          arm64_apk=tauri2demo_${version}_debug_arm64.apk
          cp src-tauri/gen/android/app/build/outputs/apk/universal/debug/app-universal-debug.apk $arm64_apk

          echo "Built APK files:"
          ls -la *.apk

      - name: Upload debug APKs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apks
          path: backend/*.apk
          retention-days: 30


